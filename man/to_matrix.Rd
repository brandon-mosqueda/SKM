% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{to_matrix}
\alias{to_matrix}
\title{Convert data to matrix}
\usage{
to_matrix(x, with_intercept = FALSE, na.rm = FALSE)
}
\arguments{
\item{x}{(\code{any}) The object to be converted to matrix.}

\item{with_intercept}{(\code{logical(1)}) Should be the \code{"(Intercept)"} column
added at the beginning? \code{FALSE} by default.}

\item{na.rm}{(\code{logical(1)}) Should \code{NA} values be removed?. \code{FALSE} by
default.}
}
\value{
A matrix.
}
\description{
Given an object creates a design matrix.
}
\details{
The following rules are applied when converting the object to matrix
depending the object's type:
\itemize{
\item \code{numeric} vector: It is converted to a one column matrix.
\item \code{character}, \code{logical} or \code{factor} vectors: All of these are considered
to be categorical variables and therefore a dummy matrix is created with
all categories (or unique values) without the firts one, so a
\verb{n x (categories_number - 1)} matrix is created.
\item \code{data.frame}: All columns are included but \code{character}, \code{logical} or
\code{factor} are included in the same way as described for vectors.
}

For all the columns a name is assigned if they has no one.
The intercept is always added at the first column with the name
\code{"(Intercept)"}.
}
\examples{
\dontrun{
to_matrix(iris)
to_matrix(1:10)
to_matrix(c("a", "b", "c"))
to_matrix(data.frame(a = c("a", "b"), b = c("c", "d")))
}

}
