% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{predict.Model}
\alias{predict.Model}
\title{Predict model}
\usage{
\method{predict}{Model}(model, x, format = "list")
}
\arguments{
\item{model}{(\code{Model}) An object of a fitted model.}

\item{x}{(\code{matrix}) The predictor variables to be used to compute the
predictions. It has to be in the same format provided when fitting the
model.}

\item{format}{(\code{character(1)}) The expected format of the predictions. The
available options are \code{"list"} and \code{"data.frame"}. \code{"data.frame"} is more
useful with multivariate models if you want in a tabular structure the
predicted values. See Value section below for more information. \code{"list"}
by default.}
}
\value{
\subsection{When \code{format} is \code{"list"}}{

For univariate models a named \code{list} with the element \code{"predicted"} which
contains the predicted values is returned. For categorical variables the
returned \code{list} includes the element \code{"probabilities"} too with a
\code{data.frame} of the predicted probabilities of each class.

For multivariate models a named \code{list} is returned where there is an named
element for each response variable in the fitted model. Each element of this
list contains a inner \code{list} in the same format as described for the
univariate case, so for categorical variables, a \code{data.frame} with the
predicted probabilities is included too.
}

\subsection{When \code{format} is \code{"data.frame"}}{

For univariate models a \code{data.frame} with the column \code{predicted} which
contains the predicted values. For categorical variables, a column for each
class with the predicted probability of this class is included too.

For multivariate models a \code{data.frame} with a column for each response
variable with the predicted values of each response.
}
}
\description{
Obtains the predictions using a fitted model object.
}
\examples{
\dontrun{
# Univariate analysis -------------------------------------------------------
x <- to_matrix(iris[, -5])
y <- iris$Species
model <- random_forest(x, y)

# Predict using the fitted model
predictions <- predict(model, x)
# Obtain the predicted values
predictions$predicted
# Obtain the predicted probabilities
predictions$probabilities

# Predict using the fitted model with data.frame format
predictions <- predict(model, x, format = "data.frame")
head(predictions)

# Multivariate analysis -----------------------------------------------------
x <- to_matrix(iris[, -c(1, 2)])
y <- iris[, c(1, 2)]
model <- generalized_linear_model(x, y)

# Predict using the fitted model
predictions <- predict(model, x)
# Obtain the predicted values of the first response variable
predictions$Sepal.Length$predicted
# Obtain the predicted values of the second response variable
predictions$Sepal.Width$predicted

# Obtain the predictions in a data.frame not in a list
predictions <- predict(model, x, format = "data.frame")
head(predictions)
}

}
