% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mixed_model.R
\name{mixed_model}
\alias{mixed_model}
\title{Fit a Mixed Model (lme4GS)}
\usage{
mixed_model(
  x,
  y,
  testing_indices = NULL,
  validate_params = TRUE,
  seed = NULL,
  verbose = TRUE
)
}
\arguments{
\item{x}{(\code{list}) The predictor (independent) variable(s). It is expected a
\code{list} with nested \code{list}'s where each inner \code{list} is named and represents
a predictor effect. Such inner \code{list}'s must have a field \code{x} with the:
square \code{matrix} of predictor variables.}

\item{y}{(\code{numeric}) The response (dependent) variable(s). As this function
only works for univariate analysis, a numeric vector is always expected.
\code{y} can contain missing values (\code{NA}) which represent the observations to
be used as testing set along with the provided indices in \code{testing_indices}
parameter.}

\item{testing_indices}{(\code{numeric}) The records' indices to be used as testing
set along all that contain missing values in \code{y}. \code{NULL} by default.}

\item{validate_params}{(\code{logical(1)}) Should the parameters be validated? It
is not recommended to set this parameter to \code{FALSE} because if something
fails a non meaningful error is going to be thrown. \code{TRUE} by default.}

\item{seed}{(\code{numeric(1)}) A value to be used as internal seed for
reproducible results. \code{NULL} by default.}

\item{verbose}{(\code{logical(1)}) Should the progress information be printed?
\code{TRUE} by default.}
}
\value{
An object of class \code{"MixedModel"} that inherits from classes
\code{"Model"} and \code{"R6"} with the fields:
\itemize{
\item \code{fitted_model}: An object of class \code{lme4GS::lmerUvcov()} with the model.
\item \code{x}: The final \code{list} used to fit the model.
\item \code{y}: The final \code{vector} or \code{matrix} used to fit the model.
\item \code{execution_time}: A \code{difftime} object with the total time taken to tune and
fit the model.
\item \code{removed_rows}: A \code{numeric} vector with the records' indices (in the
provided position) that were deleted and not taken in account in tunning
nor training.
\item \code{removed_x_cols}: A \code{numeric} vector with the columns' indices (in the
provided positions) that were deleted and not taken in account in tunning
nor training.
\item \code{...}: Some other parameters for internal use.
}
}
\description{
\code{mixed_model()} is a wrapper of the \code{lme4GS::lmerUvcov()} and function to fit
models for Genomic Selection. It only supports univariate models with a
numeric response variable.
}
\details{
This functions has a similar work as the \code{bayesian_model} function. Unlike
other models, if you want to fit a Mixed model and make some
predictions you have to provide the whole data (for training and testing) and
the records' indices to be used as testing (\code{testing_indices}). All records
with \code{NA} values in \code{y} are considered as part of testing set too.
After fitting the model, the predicted values can be obtained with the
\code{predict} function, with no more parameter than the model, see Examples
section below for more information.
}
\examples{
setwd("~/data_science/SKM")

roxygen2::roxygenise()

data(Maize)

# Data preparation of G
Line <- model.matrix(~ 0 + Line, data = Maize$Pheno)
LineGeno <- Line \%*\% Maize$Geno \%*\% t(Line)
Env <- model.matrix(~ 0 + Env, data = Maize$Pheno)
KEnv <- Env \%*\% t(Env) / ncol(Env)

# Identify the model
X <- list(
  Env = list(x = KEnv),
  LinexGeno = list(x = LineGeno)
)
y <- Maize$Pheno$Y

# Set seed for reproducible results
set.seed(2022)
folds <- cv_kfold(records_number = nrow(LineGeno), k = 5)

Predictions <- data.frame()

# Model training and predictions
for (i in seq_along(folds)) {
  cat("*** Fold:", i, "***\n")
  fold <- folds[[i]]

  # Model training
  model <- mixed_model(
    x = X,
    y = y,
    testing_indices = fold$testing
  )

  # Prediction of testing set
  predictions <- predict(model)

  # Predictions for the i-th fold
  FoldPredictions <- data.frame(
    Fold = i,
    Line = Maize$Pheno$Line[fold$testing],
    Env = Maize$Pheno$Env[fold$testing],
    Observed = y[fold$testing],
    Predicted = predictions$predicted
  )
  Predictions <- rbind(Predictions, FoldPredictions)
}

head(Predictions)
# Compute the summary of all predictions
summaries <- gs_summaries(Predictions)

# Summaries by Line
head(summaries$line)

# Summaries by Environment
summaries$env

# Summaries by Fold
summaries$fold
}
\seealso{
\code{\link[=predict.MixedModel]{predict.MixedModel()}}

Other models: 
\code{\link{bayesian_model}()},
\code{\link{deep_learning}()},
\code{\link{generalized_boosted_machine}()},
\code{\link{generalized_linear_model}()},
\code{\link{partial_least_squares}()},
\code{\link{random_forest}()},
\code{\link{support_vector_machine}()}
}
\concept{models}
