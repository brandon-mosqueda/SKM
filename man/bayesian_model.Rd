% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayesian_model.R
\name{bayesian_model}
\alias{bayesian_model}
\title{Fit a Bayesian Generalized Linear Regression Model (BGLR)}
\usage{
bayesian_model(
  x,
  y,
  iterations_number = 1500,
  burn_in = 500,
  thinning = 5,
  covariance_structure = list(df0 = 5, S0 = NULL, type = "Unstructured"),
  records_weights = NULL,
  response_groups = NULL,
  testing_indices = NULL,
  validate_params = TRUE,
  seed = NULL,
  verbose = TRUE
)
}
\arguments{
\item{x}{(\code{list}) The predictor (independent) variable(s). It is expected a
\code{list} with nested \code{list}'s where each inner \code{list} is named and represents
a predictor effect. Such inner \code{list}'s must have the two names:
\code{x} (\code{matrix}) with the predictor variable that is going to be converted to
\code{numeric} and \code{model} (\code{character(1)}) (case not sensitive) with the type
of model to apply to this predictor term, the available models are
\code{"FIXED"}, \code{"BGBLUP"}, \code{"BRR"}, \code{"Bayes_Lasso"}, \code{"Bayes_A"}, \code{"Bayes_B"}
and \code{"Bayes_C"}. In multivariate models you can only use \code{"FIXED"},
\code{"BGBLUP"} and \code{"BRR"}. \code{"BRR"} by default.}

\item{y}{(\code{data.frame} | \code{vector} | \code{matrix}) The response (dependent)
variable(s). If it is a \code{data.frame} or a \code{matrix} with 2 or more columns,
a multivariate model is assumed, a univariate model otherwise. In
univariate models if \code{y} is \code{character}, \code{logical} or \code{factor} a
categorical response is assumed, numeric otherwise. In multivariate models
all responses are coerced to numeric. \code{y} can contain missing values (\code{NA})
which represent the observations to be used as testing set along the
provided indices in \code{testing_indices} parameter.}

\item{iterations_number}{(\code{numeric(1)}) Number of iterations to fit the
model. 1500 by default.}

\item{burn_in}{(\code{numeric(1)}) Number of items to burn at the beginning of the
model. 500 by default.}

\item{thinning}{(\code{numeric(1)}) Number of items to thin the model. 5 by
default.}

\item{covariance_structure}{(\code{list}) (Only for multivariate models) A named
\code{list} used to define the co-variance matrix for model residuals. This list
must have the fileds \code{type} (\code{character(1)}) (case not sensitive) with one
of the following values \code{"Unstructured"}, \code{"Diagonal"}, \code{"Factor_analytic"}
or \code{"Recursive"}, \code{df0} (\code{numeric(1)}) with the degrees of freedom and \code{S0}
with the covariance matrix of size \verb{t x t}, where \code{t} is the number of
response variables. By default the next \code{list} is used:
\code{list(df0 = 5, S0 = NULL, type = "Unstructured")}.}

\item{records_weights}{(\code{numeric}) (only for univariate models with a numeric
response variables) A vector of weights. If weights are provided the
residual variance of each data-point is set to be proportional to the
inverse of the squared-weight. \code{NULL} by default.}

\item{response_groups}{(\code{factor}) (only for univariate models) A vector of
the same length as \code{y} that associates observations with groups, each group
will have an associated variance component for the error term. \code{NULL} by
default.}

\item{testing_indices}{(\code{numeric}) The records' indices to be used as testing
set along all that contain missing values in \code{y}. \code{NULL} by default.}

\item{validate_params}{(\code{logical(1)}) Should the parameters be validated? It
is not recommended to set this parameter to \code{FALSE} because if something
fails a non meaningful error is going to be thrown. \code{TRUE} by default.}

\item{seed}{(\code{numeric(1)}) A value to be used as internal seed for
reproducible results. \code{NULL} by default.}

\item{verbose}{(\code{logical(1)}) Should the progress information be printed?
\code{TRUE} by default.}
}
\value{
An object of class \code{"BayesianModel"} that inherits from classes
\code{"Model"} and \code{"R6"} with the fields:
\itemize{
\item \code{fitted_model}: An object of class \code{\link[BGLR:BGLR]{BGLR::BGLR()}} with the model.
\item \code{x}: The final \code{list} used to fit the model.
\item \code{y}: The final \code{vector} or \code{matrix} used to fit the model.
\item \code{hyperparams}: A \code{list} with all the provided hyperparameters.
\item \code{hyperparams_grid}: A \code{data.frame} with all the computed combinations of
hyperparameters and with one more column called \code{"loss"} with the value of
the loss function for each combination. The grid is ordered ascendingly by
loss value (the lower the better).
\item \code{best_hyperparams}: A \code{list} with the combination of hyperparameter with
the lowest loss value (the first row in \code{hyperparams_grid}).
\item \code{execution_time}: A \code{difftime} object with the total time taken to tune and
fit the model.
\item \code{removed_rows}: A \code{numeric} vector with the records' indices (in the
provided position) that were deleted and not taken in account in tunning
nor training.
\item \code{removed_x_cols}: A \code{numeric} vector with the columns' indices (in the
provided position and after the design matrix creation) that were deleted
and not taken in account in tunning nor training.
\item \code{...}: Some other parameters for internal use.
}
}
\description{
\code{bayesian_model()} is a wrapper of the \code{\link[BGLR:BGLR]{BGLR::BGLR()}} and
\code{\link[BGLR:Multitrait]{BGLR::Multitrait()}} functions. It fits univariate models for numeric and
categorical response variables and multivariate models for numeric responses
only.
}
\details{
Since \link{BGLR} functions works a little different than other most common R
packages for machine learning \code{bayesian_model} functions adapts to it. Unlike
other functions, if you want to fit a bayesian model and make some
predictions you have to provide the whole data (for training and testing) and
the records' indices to be used as testing (\code{testing_indices}). All records
with \code{NA} values in \code{y} are considered as part of testing set too.
After fitting the model, the predicted values can be obtained with the
\code{predict} function, with no more parameter than the model.
}
\examples{
\dontrun{
# Fit with all default parameters
x <- list(list(x = to_matrix(iris[, -5]), model = "BRR"))
model <- bayesian_model(x, iris$Species, testing_indices = 1:50)
predictions <- predict(model)

# Multivariate analysis
x <- list(list(x = to_matrix(iris[, -c(1, 5)]), model = "BRR"))
y <- iris[, c(1, 5)]
model <- bayesian_model(
  x = x,
  y = y,
  iterations_number = 100,
  burn_in = 50
)
}

}
\seealso{
\code{\link[=predict.BayesianModel]{predict.BayesianModel()}}

Other models: 
\code{\link{deep_learning}()},
\code{\link{generalized_boosted_machine}()},
\code{\link{generalized_linear_model}()},
\code{\link{random_forest}()},
\code{\link{support_vector_machine}()}
}
\concept{models}
