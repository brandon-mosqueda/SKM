% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uvcov_model_model.R
\name{predict.UVCovModel}
\alias{predict.UVCovModel}
\title{Predict UvCov model}
\usage{
\method{predict}{UVCovModel}(model, indices = NULL, format = "list")
}
\arguments{
\item{model}{(\code{Model}) An object of a fitted model.}

\item{indices}{(\code{numeric}) A numeric vector with the indices of the elements
used to fit the model you want the predictions. \code{NULL} by default which
uses the indices specified in \code{testing_indices} when the model was fitted
or those elements with \code{NA} values.}

\item{format}{(\code{character(1)}) The expected format of the predictions. The
available options are \code{"list"} and \code{"data.frame"}. \code{"data.frame"} is more
useful with multivariate models if you want in a tabular structure the
predicted values. See Value section below for more information. \code{"list"}
by default.}
}
\value{
\subsection{When \code{format} is \code{"list"}}{

For univariate models a named \code{list} with the element \code{"predicted"} which
contains the predicted values is returned. For categorical variables the
returned \code{list} includes the element \code{"probabilities"} too with a
\code{data.frame} of the predicted probabilities of each class.

For multivariate models a named \code{list} is returned where there is an named
element for each response variable in the fitted model. Each element of this
list contains a inner \code{list} in the same format as described for the
univariate case, so for categorical variables, a \code{data.frame} with the
predicted probabilities is included too.
}

\subsection{When \code{format} is \code{"data.frame"}}{

For univariate models a \code{data.frame} with the column \code{predicted} which
contains the predicted values. For categorical variables, a column for each
class with the predicted probability of this class is included too.

For multivariate models a \code{data.frame} with a column for each response
variable with the predicted values of each response.
}
}
\description{
Obtains the predictions using a fitted model object of class \code{UVCovModel}.
}
\examples{
data(Maize)

# Data preparation of G
Line <- model.matrix(~ 0 + Line, data = Maize$Pheno)
LineGeno <- Line \%*\% Maize$Geno \%*\% t(Line)
Env <- model.matrix(~ 0 + Env, data = Maize$Pheno)
KEnv <- Env \%*\% t(Env) / ncol(Env)

# Identify the model
X <- list(
  Env = list(x = KEnv),
  LinexGeno = list(x = LineGeno)
)
y <- Maize$Pheno$Y

# Set seed for reproducible results
set.seed(2022)
folds <- cv_kfold(records_number = nrow(LineGeno), k = 5)

Predictions <- data.frame()

# Model training and predictions
for (i in seq_along(folds)) {
  cat("*** Fold:", i, "***\n")
  fold <- folds[[i]]

  # Model training
  model <- uvcov_model(
    x = X,
    y = y,
    testing_indices = fold$testing
  )

  # Prediction of testing set
  predictions <- predict(model)

  # Predictions for the i-th fold
  FoldPredictions <- data.frame(
    Fold = i,
    Line = Maize$Pheno$Line[fold$testing],
    Env = Maize$Pheno$Env[fold$testing],
    Observed = y[fold$testing],
    Predicted = predictions$predicted
  )
  Predictions <- rbind(Predictions, FoldPredictions)
}

head(Predictions)
# Compute the summary of all predictions
summaries <- gs_summaries(Predictions)

# Summaries by Line
head(summaries$line)

# Summaries by Environment
summaries$env

# Summaries by Fold
summaries$fold
}
