% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/partial_least_squares.R
\name{partial_least_squares}
\alias{partial_least_squares}
\title{Fit a Partial Least Squares Regression Model (PLSR)}
\usage{
partial_least_squares(
  x,
  y,
  method = "kernel",
  scale = FALSE,
  validate_params = TRUE,
  seed = NULL,
  verbose = TRUE
)
}
\arguments{
\item{x}{(\code{matrix}) The predictor (independet) variable(s). It must be a
numeric matrix. You can use \code{\link[=to_matrix]{to_matrix()}} function to convert your data to
a \code{matrix}.}

\item{y}{(\code{data.frame} | \code{vector} | \code{matrix}) The response (dependent)
variable(s). If it is a \code{data.frame} or a \code{matrix} with 2 or more columns,
a multivariate model is assumed, a univariate model otherwise. All the
variables are coerced to numeric before training the model.}

\item{method}{(\code{character(1)}) (case not sensitive) The type of model to fit.
The available options are the kernel algorithm (\code{"kernel"}), the wide
kernel algorithm (\code{"wide_kernel"}), SIMPLS (\code{"simpls"}), and the classical
orthogonal scores algorithm (\code{"orthogonal"}). \code{"kernel"} by default.}

\item{scale}{(\code{logical}) A logical vector indicating the variables in \code{x}
to be scaled. If \code{scale} is of length 1, the value is recycled as many
times as needed. \code{TRUE} by default.}

\item{validate_params}{(\code{logical(1)}) Should the parameters be validated? It
is not recommended to set this parameter to \code{FALSE} because if something
fails a non meaningful error is going to be thrown. \code{TRUE} by default.}

\item{seed}{(\code{numeric(1)}) A value to be used as internal seed for
reproducible results. \code{NULL} by default.}

\item{verbose}{(\code{logical(1)}) Should the progress information be printed?
\code{TRUE} by default.}
}
\value{
An object of class \code{"PartialLeastSquaresModel"} that inherits from classes
\code{"Model"} and \code{"R6"} with the fields:
\itemize{
\item \code{fitted_model}: An object of class \code{\link[pls:mvr]{pls::plsr()}} with the model.
\item \code{x}: The final \verb{\code{matrix}} used to fit the model.
\item \code{y}: The final \code{vector} or \verb{mÌ€atrix} used to fit the model.
\item \code{hyperparams_grid}: A \code{data.frame} with all the computed combinations of
hyperparameters and with one more column called \code{"loss"} with the value of
the loss function for each combination. The data is ordered with the best
combinations at start, sometimes with the lowest values first and other
times with the greatest values first, depending the loss function.
\item \code{best_hyperparams}: A \code{list} with the combination of hyperparameters with
the best loss value (the first row in \code{hyperparams_grid}).
\item \code{execution_time}: A \code{difftime} object with the total time taken to tune and
fit the model.
\item \code{removed_rows}: A \code{numeric} vector with the records' indices (in the
provided position) that were deleted and not taken in account in tunning
nor training.
\item \code{removed_x_cols}: A \code{numeric} vector with the columns' indices (in the
provided positions) that were deleted and not taken in account in tunning
nor training.
\item \code{...}: Some other parameters for internal use.
}
}
\description{
\code{partial_least_squares()} is a wrapper of the \code{\link[pls:mvr]{pls::plsr()}} function. It fits
univariate and multivariate models for numeric responses only.
}
\details{
You have to consider that before tuning all columns without variance
(where all the records has the same value) are removed. Such columns
positions are returned in the \code{removed_x_cols} field of the returned object.

All records with missing values (\code{NA}), either in \code{x} or in \code{y} will be
removed. The positions of the removed records are returned in the
\code{removed_rows} field of the returned object.
}
\examples{
\dontrun{
# Fit with all default parameters
model <- partial_least_squares(to_matrix(iris[, -1]), iris$Sepal.Length)

predictions <- predict(model, to_matrix(iris))
predictions$predicted
}

}
\seealso{
\code{\link[=predict.Model]{predict.Model()}}

Other models: 
\code{\link{bayesian_model}()},
\code{\link{deep_learning}()},
\code{\link{generalized_boosted_machine}()},
\code{\link{generalized_linear_model}()},
\code{\link{random_forest}()},
\code{\link{support_vector_machine}()}
}
\concept{models}
