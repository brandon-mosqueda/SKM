% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/partial_least_squares_model.R
\name{predict.PartialLeastSquaresModel}
\alias{predict.PartialLeastSquaresModel}
\title{Predict Partial Least Squares model}
\usage{
\method{predict}{PartialLeastSquaresModel}(model, x, components_num = NULL, format = "list")
}
\arguments{
\item{model}{(\code{Model}) An object of a fitted model.}

\item{x}{(\code{matrix}) The predictor variables to be used to compute the
predictions. It has to be in the same format provided when fitting the
model.}

\item{components_num}{(\code{numeric(1)}) A numeric value with the number of
components to use to compute the predictions. \code{NULL} by default which uses
the optimal number of components determined with cross validation when the
model was fitted.}

\item{format}{(\code{character(1)}) The expected format of the predictions. The
available options are \code{"list"} and \code{"data.frame"}. \code{"data.frame"} is more
useful with multivariate models if you want in a tabular structure the
predicted values. See Value section below for more information. \code{"list"}
by default.}
}
\value{
\subsection{When \code{format} is \code{"list"}}{

For univariate models a named \code{list} with the element \code{"predicted"} which
contains the predicted values is returned.

For multivariate models a named \code{list} is returned where there is an named
element for each response variable in the fitted model. Each element of this
list contains a inner \code{list} in the same format as described for the
univariate case.
}

\subsection{When \code{format} is \code{"data.frame"}}{

For univariate models a \code{data.frame} with the column \code{predicted} which
contains the predicted values.

For multivariate models a \code{data.frame} with a column for each response
variable with the predicted values of each response.
}
}
\description{
Obtains the predictions using a fitted model object of class
\code{PartialLeastSquaresModel}.
}
\examples{
\dontrun{
# Use all default hyperparameters -------------------------------------------
x <- to_matrix(iris[, -1])
y <- iris$Sepal.Length
model <- partial_least_squares(x, y)

# Obtain the optimal number of components to use with predict
model$optimal_components_num

# Predict using the fitted model
predictions <- predict(model, x)
# Obtain the predicted values
predictions$predicted

# Predict with a non optimal number of components ---------------------------
x <- to_matrix(iris[, -1])
y <- iris$Sepal.Length
model <- partial_least_squares(x, y, method = "orthogonal")

# Obtain the optimal number of components to use with predict
model$optimal_components_num

# Predict using the fitted model with the optimal number of components
predictions <- predict(model, x)
# Obtain the predicted values
predictions$predicted

# Predict using the fitted model without the optimal number of components
predictions <- predict(model, x, components_num = 2)
# Obtain the predicted values
predictions$predicted

# Multivariate analysis -----------------------------------------------------
x <- to_matrix(iris[, -c(1, 2)])
y <- iris[, c(1, 2)]
model <- partial_least_squares(x, y, method = "wide_kernel")

# Predict using the fitted model
predictions <- predict(model, x)
# Obtain the predicted values of the first response variable
predictions$Sepal.Length$predicted
# Obtain the predicted values of the second response variable
predictions$Sepal.Width$predicted

# Obtain the predictions in a data.frame not in a list
predictions <- predict(model, x, format = "data.frame")
head(predictions)
}

}
